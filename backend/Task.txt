Task.javaは、Spring Boot アプリケーションにおけるタスクのデータモデルを表している。
このモデルは、データベースのエンティティとしてマッピングされ、タスクの属性を持っている。
タスクを表現するための基本的なデータ構造を提供し、データベースに保存されたり、取り出されたりするタスクの属性を管理します。


プログラムの説明：

・import jakarta.persistence.Entity;
    @Entity アノテーションを利用するためのインポートです。
    これにより、Task クラスが JPA エンティティとして扱われ、データベースのテーブルにマッピングされます。

・import jakarta.persistence.GeneratedValue;
    @GeneratedValue アノテーションを利用するためのインポートです。
    データベースの主キーが自動生成される戦略を指定するために使用します。

・import jakarta.persistence.GenerationType;
    GenerationType.IDENTITY 戦略を利用するためのインポートです。
    この戦略は、データベースが主キーの値を自動的に生成することを指定します。

・import jakarta.persistence.Id;
    @Id アノテーションを利用するためのインポートです。データベーステーブルの主キーとしてフィールドを指定するために使用します。

・import java.time.LocalDate;
    LocalDate クラスを利用するためのインポートです。タスクの期限日を扱うために使用します。
    LocalDate は日付のみ（年、月、日）を表現します。
    
・@Entity
    @Entity アノテーションは、このクラスがデータベースのテーブルに対応するエンティティであることを示しています。
    Spring JPA（Java Persistence API）を使用して、このクラスのインスタンスがデータベース内で永続化されます。

・@Id 
    @Id アノテーションは、このフィールドがデータベーステーブル内の主キーであることを示します。
    主キーは各レコードを一意に識別するために使用されます。

・@GeneratedValue(strategy = GenerationType.IDENTITY)
    @GeneratedValue アノテーションは、主キーが自動的に生成されることを示します。
    GenerationType.IDENTITY は、データベースが自動的に主キーの値をインクリメントする戦略を意味します。

・private Long id;
    このフィールドは、タスクを識別するための一意のIDを格納します。データベースで自動的に生成される主キーです。

・private String name;
    このフィールドは、タスクのタイトルを格納します。例えば、「買い物」や「宿題」などのタスク名が入ります。

・private String details;
    このフィールドは、タスクの詳細な説明を格納します。タスクに関する追加の情報や指示がここに入ります。

・private String priority;
    このフィールドは、タスクの優先度を格納します。例えば、「高」、「中」、「低」など、タスクの重要度を示します。

・private LocalDate dueDate;
    このフィールドは、タスクの期限日を格納します。LocalDate 型を使用して、特定の日付（年、月、日）を表します。

・デフォルトコンストラクタ
    デフォルトコンストラクタは、引数なしでオブジェクトを生成するために使用されます。
    JPA ではエンティティクラスにデフォルトコンストラクタが必要です。

・引数付きコンストラクタ
    このコンストラクターは、タスクのすべての属性を引数として受け取り、それらを初期化します。
    新しいタスクオブジェクトを作成するときに使用されます。

・getId メソッド
    このメソッドは、タスクの id を取得します。タスクを一意に識別するための値を返します。

・setId メソッド
    このメソッドは、タスクの id を設定します。外部からこのフィールドを変更したい場合に使用されます。

・getName メソッド
    このメソッドは、タスクの name を取得します。タスクのタイトルを返します。

・getDetails メソッド
    このメソッドは、タスクの details を取得します。タスクの詳細内容を返します。

・setDetails メソッド
    このメソッドは、タスクの details を設定します。タスクの詳細内容を変更する場合に使用されます。

・getPriority メソッド
    このメソッドは、タスクの priority を取得します。タスクの優先度を返します。

・setPriority メソッド
    このメソッドは、タスクの priority を設定します。タスクの優先度を変更する場合に使用されます。

・getDueDate メソッド
    このメソッドは、タスクの dueDate を取得します。タスクの期日を返します。

・setDueDate メソッド
    このメソッドは、タスクの dueDate を設定します。タスクの期日を変更する場合に使用されます。

